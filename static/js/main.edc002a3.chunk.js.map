{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLACMA,EACA,mCADAA,EAEE,2CA4DOC,MA1Df,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNC,EADM,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAENG,EAFM,KAEEC,EAFF,KA0Bb,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WAAsB,MAAzG,SACE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAET,EAASS,EAAEC,OAAOC,QAC/BA,MAAOZ,EACPa,WAhCK,SAAAC,GACA,UAAVA,EAAIC,KACLC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA4BY,oBAAflB,EAAQG,KACjB,gCACA,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,IAA0CrB,EAAQsB,IAAIC,WACtD,qBAAKrB,UAAU,OAAf,SA5BU,SAACsB,GACjB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAEjED,EAAEE,UACXC,EAAKH,EAAEI,UACPC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAKP,EAAEQ,cAEX,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAmBLE,CAAY,IAAIC,WAGzC,sBAAKhC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBF,EAAQG,KAAKC,KAApC,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAG5C,SClDXgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.edc002a3.chunk.js","sourcesContent":["import React ,{useState} from 'react';\nconst api={\n  key:\"c392c00659d04b45dc6a180257e0a04c\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n  const [query,setQuery]=useState(\"\");\n  const [weather,setWeather]=useState({});\n\n  const search = evt =>{\n    if(evt.key===\"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res=>res.json())\n      .then(result=>{\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      })\n    }\n  }\n  const dateBuilder=(d)=>{\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day=days[d.getDay()];\n    let date=d.getDate();\n    let month = months[d.getMonth()];\n    let year=d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e=>setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main!= \"undefined\")?(\n        <div>\n        <div className=\"location-box\">\n          <div className=\"location\">{weather.name},{weather.sys.country}</div>\n          <div className=\"date\">{dateBuilder(new Date())}</div>\n        </div>\n\n        <div className=\"weather-box\">\n          <div className=\"temp\">{weather.main.temp}Â°c</div>\n          <div className=\"weather\">{weather.weather[0].main}</div>\n        </div>\n        </div>\n        ):(\"\")}\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}